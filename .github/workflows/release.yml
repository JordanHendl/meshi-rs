name: Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    env:
      VK_ICD_FILENAMES: /usr/share/vulkan/icd.d/lvp_icd.x86_64.json
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install llvmpipe Vulkan driver
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y mesa-vulkan-drivers

      - name: Build
        run: cargo build --release

      - name: Package
        run: cargo package --allow-dirty --no-verify

      - name: Prepare artifact
        shell: bash
        run: |
          mkdir -p artifacts
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cp target/release/meshi.dll artifacts/meshi.dll
          else
            cp target/release/libmeshi.so artifacts/meshi.so
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: meshi-${{ matrix.os }}
          path: artifacts/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/meshi-ubuntu-latest/meshi.so
            artifacts/meshi-windows-latest/meshi.dll
